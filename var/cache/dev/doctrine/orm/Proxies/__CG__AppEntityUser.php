<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'author', '' . "\0" . 'App\\Entity\\User' . "\0" . 'level', '' . "\0" . 'App\\Entity\\User' . "\0" . 'civility', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstname', '' . "\0" . 'App\\Entity\\User' . "\0" . 'lastname', '' . "\0" . 'App\\Entity\\User' . "\0" . 'cellphone', '' . "\0" . 'App\\Entity\\User' . "\0" . 'emailSponsorship', '' . "\0" . 'App\\Entity\\User' . "\0" . 'bornAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'realEstateProjects', '' . "\0" . 'App\\Entity\\User' . "\0" . 'bankDetails', '' . "\0" . 'App\\Entity\\User' . "\0" . 'description', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isPickable', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isPickableValidated', '' . "\0" . 'App\\Entity\\User' . "\0" . 'hasNewsletter', '' . "\0" . 'App\\Entity\\User' . "\0" . 'siret', '' . "\0" . 'App\\Entity\\User' . "\0" . 'hasWaiver', '' . "\0" . 'App\\Entity\\User' . "\0" . 'status', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isActive', '' . "\0" . 'App\\Entity\\User' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'histories', '' . "\0" . 'App\\Entity\\User' . "\0" . 'profiles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'userPlatforms', '' . "\0" . 'App\\Entity\\User' . "\0" . 'userAgency', '' . "\0" . 'App\\Entity\\User' . "\0" . 'addresses', '' . "\0" . 'App\\Entity\\User' . "\0" . 'sponsorships', '' . "\0" . 'App\\Entity\\User' . "\0" . 'managements', '' . "\0" . 'App\\Entity\\User' . "\0" . 'group', '' . "\0" . 'App\\Entity\\User' . "\0" . 'newsLetters', '' . "\0" . 'App\\Entity\\User' . "\0" . 'mailjet_id'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'author', '' . "\0" . 'App\\Entity\\User' . "\0" . 'level', '' . "\0" . 'App\\Entity\\User' . "\0" . 'civility', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstname', '' . "\0" . 'App\\Entity\\User' . "\0" . 'lastname', '' . "\0" . 'App\\Entity\\User' . "\0" . 'cellphone', '' . "\0" . 'App\\Entity\\User' . "\0" . 'emailSponsorship', '' . "\0" . 'App\\Entity\\User' . "\0" . 'bornAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'realEstateProjects', '' . "\0" . 'App\\Entity\\User' . "\0" . 'bankDetails', '' . "\0" . 'App\\Entity\\User' . "\0" . 'description', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isPickable', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isPickableValidated', '' . "\0" . 'App\\Entity\\User' . "\0" . 'hasNewsletter', '' . "\0" . 'App\\Entity\\User' . "\0" . 'siret', '' . "\0" . 'App\\Entity\\User' . "\0" . 'hasWaiver', '' . "\0" . 'App\\Entity\\User' . "\0" . 'status', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isActive', '' . "\0" . 'App\\Entity\\User' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'histories', '' . "\0" . 'App\\Entity\\User' . "\0" . 'profiles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'userPlatforms', '' . "\0" . 'App\\Entity\\User' . "\0" . 'userAgency', '' . "\0" . 'App\\Entity\\User' . "\0" . 'addresses', '' . "\0" . 'App\\Entity\\User' . "\0" . 'sponsorships', '' . "\0" . 'App\\Entity\\User' . "\0" . 'managements', '' . "\0" . 'App\\Entity\\User' . "\0" . 'group', '' . "\0" . 'App\\Entity\\User' . "\0" . 'newsLetters', '' . "\0" . 'App\\Entity\\User' . "\0" . 'mailjet_id'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIdentifier', []);

        return parent::getUserIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor(?\App\Entity\User $author): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$author]);

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel(): ?\App\Entity\Level
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', []);

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevel(?\App\Entity\Level $level): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevel', [$level]);

        return parent::setLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function getCivility(): ?\App\Entity\Civility
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCivility', []);

        return parent::getCivility();
    }

    /**
     * {@inheritDoc}
     */
    public function setCivility(?\App\Entity\Civility $civility): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCivility', [$civility]);

        return parent::setCivility($civility);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstname(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstname', []);

        return parent::getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstname(?string $firstname): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstname', [$firstname]);

        return parent::setFirstname($firstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastname(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastname', []);

        return parent::getLastname();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastname(?string $lastname): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastname', [$lastname]);

        return parent::setLastname($lastname);
    }

    /**
     * {@inheritDoc}
     */
    public function getCellphone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCellphone', []);

        return parent::getCellphone();
    }

    /**
     * {@inheritDoc}
     */
    public function setCellphone(?string $cellphone): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCellphone', [$cellphone]);

        return parent::setCellphone($cellphone);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailSponsorship(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailSponsorship', []);

        return parent::getEmailSponsorship();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailSponsorship(?string $emailSponsorship): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailSponsorship', [$emailSponsorship]);

        return parent::setEmailSponsorship($emailSponsorship);
    }

    /**
     * {@inheritDoc}
     */
    public function getBornAt(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBornAt', []);

        return parent::getBornAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setBornAt(?\DateTime $bornAt): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBornAt', [$bornAt]);

        return parent::setBornAt($bornAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getRealEstateProjects(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealEstateProjects', []);

        return parent::getRealEstateProjects();
    }

    /**
     * {@inheritDoc}
     */
    public function setRealEstateProjects(?string $realEstateProjects): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRealEstateProjects', [$realEstateProjects]);

        return parent::setRealEstateProjects($realEstateProjects);
    }

    /**
     * {@inheritDoc}
     */
    public function getBankDetails(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBankDetails', []);

        return parent::getBankDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setBankDetails(?string $bankDetails): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBankDetails', [$bankDetails]);

        return parent::setBankDetails($bankDetails);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPickable(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPickable', []);

        return parent::getIsPickable();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPickable(bool $isPickable): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPickable', [$isPickable]);

        return parent::setIsPickable($isPickable);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPickableValidated(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPickableValidated', []);

        return parent::getIsPickableValidated();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPickableValidated(bool $isPickableValidated): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPickableValidated', [$isPickableValidated]);

        return parent::setIsPickableValidated($isPickableValidated);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasNewsletter(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasNewsletter', []);

        return parent::getHasNewsletter();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasNewsletter(bool $hasNewsletter): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasNewsletter', [$hasNewsletter]);

        return parent::setHasNewsletter($hasNewsletter);
    }

    /**
     * {@inheritDoc}
     */
    public function getSiret(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSiret', []);

        return parent::getSiret();
    }

    /**
     * {@inheritDoc}
     */
    public function setSiret(?string $siret): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSiret', [$siret]);

        return parent::setSiret($siret);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasWaiver(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasWaiver', []);

        return parent::getHasWaiver();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasWaiver(bool $hasWaiver): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasWaiver', [$hasWaiver]);

        return parent::setHasWaiver($hasWaiver);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(?string $status): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', []);

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive(bool $isActive): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeImmutable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeImmutable $createdAt): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(?\DateTimeInterface $updatedAt): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistories(): ?\App\Entity\History
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistories', []);

        return parent::getHistories();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistories(?\App\Entity\History $histories): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistories', [$histories]);

        return parent::setHistories($histories);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfiles(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfiles', []);

        return parent::getProfiles();
    }

    /**
     * {@inheritDoc}
     */
    public function addProfile(\App\Entity\Profile $profile): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProfile', [$profile]);

        return parent::addProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProfile(\App\Entity\Profile $profile): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProfile', [$profile]);

        return parent::removeProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPlatforms(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPlatforms', []);

        return parent::getUserPlatforms();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserPlatform(\App\Entity\UserPlatform $userPlatform): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserPlatform', [$userPlatform]);

        return parent::addUserPlatform($userPlatform);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserPlatform(\App\Entity\UserPlatform $userPlatform): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserPlatform', [$userPlatform]);

        return parent::removeUserPlatform($userPlatform);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserAgency(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserAgency', []);

        return parent::getUserAgency();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserAgency(\App\Entity\UserAgency $userAgency): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserAgency', [$userAgency]);

        return parent::addUserAgency($userAgency);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserAgency(\App\Entity\UserAgency $userAgency): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserAgency', [$userAgency]);

        return parent::removeUserAgency($userAgency);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddresses(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddresses', []);

        return parent::getAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function addAddress(\App\Entity\Adress $address): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAddress', [$address]);

        return parent::addAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAddress(\App\Entity\Adress $address): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAddress', [$address]);

        return parent::removeAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getSponsorships(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSponsorships', []);

        return parent::getSponsorships();
    }

    /**
     * {@inheritDoc}
     */
    public function addSponsorship(\App\Entity\Sponsorship $sponsorship): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSponsorship', [$sponsorship]);

        return parent::addSponsorship($sponsorship);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSponsorship(\App\Entity\Sponsorship $sponsorship): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSponsorship', [$sponsorship]);

        return parent::removeSponsorship($sponsorship);
    }

    /**
     * {@inheritDoc}
     */
    public function getManagements(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManagements', []);

        return parent::getManagements();
    }

    /**
     * {@inheritDoc}
     */
    public function addManagement(\App\Entity\Management $management): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addManagement', [$management]);

        return parent::addManagement($management);
    }

    /**
     * {@inheritDoc}
     */
    public function removeManagement(\App\Entity\Management $management): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeManagement', [$management]);

        return parent::removeManagement($management);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroup(): ?\App\Entity\Group
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroup', []);

        return parent::getGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroup(?\App\Entity\Group $group): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroup', [$group]);

        return parent::setGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsLetters(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsLetters', []);

        return parent::getNewsLetters();
    }

    /**
     * {@inheritDoc}
     */
    public function addNewsLetter(\App\Entity\NewsLetter $newsLetter): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNewsLetter', [$newsLetter]);

        return parent::addNewsLetter($newsLetter);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNewsLetter(\App\Entity\NewsLetter $newsLetter): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNewsLetter', [$newsLetter]);

        return parent::removeNewsLetter($newsLetter);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailjetId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailjetId', []);

        return parent::getMailjetId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailjetId(?int $mailjet_id): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailjetId', [$mailjet_id]);

        return parent::setMailjetId($mailjet_id);
    }

}
